/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.79
 * Generated at: 2023-08-29 04:39:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class updateProfilePage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1692518835619L));
    _jspx_dependants.put("jar:file:/D:/RYU/sts/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/healthhaeDUO/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/RYU/sts/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/healthhaeDUO/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML>\r\n");
      out.write("<!--\r\n");
      out.write("	TXT by HTML5 UP\r\n");
      out.write("	html5up.net | @ajlkn\r\n");
      out.write("	Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)\r\n");
      out.write("-->\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>HealthDuo</title>\r\n");
      out.write("<meta charset=\"utf-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=no\" />\r\n");
      out.write("<link rel=\"icon\" href=\"assets/css/images/favicon.ico\" type=\"image/x-icon\" />\r\n");
      out.write("<link rel=\"stylesheet\" href=\"assets/css/main.css\" />\r\n");
      out.write("\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("/* 프로필 스타일 */\r\n");
      out.write(".useId {\r\n");
      out.write("	line-height: 0px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	font-size: 35px;\r\n");
      out.write("	font-weight: 700;\r\n");
      out.write("	color: #1e1e23;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".useEmail {\r\n");
      out.write("	padding: 2px 20px 8pxpx;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("	font-size: 25px;\r\n");
      out.write("	color: #929294;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".useId, .useEmail {\r\n");
      out.write("	margin: 0.5em 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#mypageprofile {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	position: relative;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".image-container {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".centered-image {\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	height: auto;\r\n");
      out.write("	border-radius: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 사진첨부 모달 */\r\n");
      out.write("#updateProfileModal {\r\n");
      out.write("	display: none;\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("	background-color: rgba(0, 0, 0, 0.7);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content {\r\n");
      out.write("	width: 500px;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-top: 10%;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	background-color: #f9f9f9;\r\n");
      out.write("	border-radius: 10px;\r\n");
      out.write("	box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content .close {\r\n");
      out.write("	position: absolute;\r\n");
      out.write("	top: 10px;\r\n");
      out.write("	right: 10px;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	color: #555; /* 변경된 색상 */\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content label {\r\n");
      out.write("	margin-bottom: 10px;\r\n");
      out.write("	font-size: 20px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	color: #333; /* 변경된 색상 */\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content form {\r\n");
      out.write("	display: flex;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	align-items: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content .file-label {\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	background-color: #3498db;\r\n");
      out.write("	color: white;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: background-color 0.3s;\r\n");
      out.write("	margin-bottom: 0px;\r\n");
      out.write("	align-self: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content .file-label:hover {\r\n");
      out.write("	background-color: #2980b9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content .file-icon {\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content .file-input {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content button {\r\n");
      out.write("	background-color: #4CAF50;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border: none;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	margin-top: 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	font-size: 16px;\r\n");
      out.write("	transition: background-color 0.3s;\r\n");
      out.write("	align-self: center;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".update-profile-content button:hover {\r\n");
      out.write("	background-color: #45a049;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 이미지 컨테이너 스타일 */\r\n");
      out.write("#selectedImageContainer {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	margin-bottom: 20px;\r\n");
      out.write("	width: 180px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#selectedImage {\r\n");
      out.write("	max-width: 180px;\r\n");
      out.write("	min-width: 180px;\r\n");
      out.write("	max-height: 180px;\r\n");
      out.write("	min-height: 180px;\r\n");
      out.write("	border: 2px solid #3498db;\r\n");
      out.write("	border-radius: 50%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 모달 스타일 */\r\n");
      out.write("label {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("	background-color: #4CAF50;\r\n");
      out.write("	color: white;\r\n");
      out.write("	border: none;\r\n");
      out.write("	padding: 8px 16px;\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	font-size: 14px;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	border-radius: 4px;\r\n");
      out.write("	text-transform: none;\r\n");
      out.write("	font-family: inherit;\r\n");
      out.write("	line-height: inherit;\r\n");
      out.write("	-webkit-appearance: button;\r\n");
      out.write("	overflow: visible;\r\n");
      out.write("	box-sizing: border-box !important;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal {\r\n");
      out.write("	box-sizing: border-box !important;\r\n");
      out.write("	transition: ease all 0.5s;\r\n");
      out.write("	display: none;\r\n");
      out.write("	position: fixed;\r\n");
      out.write("	z-index: 1;\r\n");
      out.write("	left: 0;\r\n");
      out.write("	top: 0;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	overflow: auto;\r\n");
      out.write("	background-color: rgba(0, 0, 0, 0.7);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".modal-content {\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	background-color: #fff;\r\n");
      out.write("	margin: 15% auto;\r\n");
      out.write("	padding: 20px;\r\n");
      out.write("	border: 1px solid #888;\r\n");
      out.write("	max-width: 500px;\r\n");
      out.write("	position: relative;\r\n");
      out.write("	display: -ms-flexbox;\r\n");
      out.write("	display: flex;\r\n");
      out.write("	-ms-flex-direction: column;\r\n");
      out.write("	flex-direction: column;\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	pointer-events: auto;\r\n");
      out.write("	background-clip: padding-box;\r\n");
      out.write("	border-radius: 0.3rem;\r\n");
      out.write("	outline: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close {\r\n");
      out.write("	color: #aaa;\r\n");
      out.write("	text-align: right;\r\n");
      out.write("	float: right;\r\n");
      out.write("	font-size: 28px;\r\n");
      out.write("	font-weight: bold;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	box-sizing: border-box !important;\r\n");
      out.write("	transition: ease all 0.5s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".close:hover, .close:focus {\r\n");
      out.write("	color: black;\r\n");
      out.write("	text-decoration: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#passwordMember {\r\n");
      out.write("	border: 1px solid rgba(0, 0, 0, .2);\r\n");
      out.write("	border-width: 2px;\r\n");
      out.write("	border-style: inset;\r\n");
      out.write("	border-color: -internal-light-dark(rgb(118, 118, 118),\r\n");
      out.write("		rgb(133, 133, 133));\r\n");
      out.write("	border-image: initial;\r\n");
      out.write("	box-sizing: border-box !important;\r\n");
      out.write("	transition: ease all 0.5s;\r\n");
      out.write("	overflow: visible;\r\n");
      out.write("	margin: 0;\r\n");
      out.write("	font-family: inherit;\r\n");
      out.write("	font-size: inherit;\r\n");
      out.write("	line-height: inherit;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("label {\r\n");
      out.write("	box-sizing: border-box !important;\r\n");
      out.write("	transition: ease all 0.5s;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 첨부파일 css */\r\n");
      out.write(".file-label {\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	width: 180px;\r\n");
      out.write("	display: inline-block;\r\n");
      out.write("	background-color: #3498db;\r\n");
      out.write("	color: white;\r\n");
      out.write("	padding: 10px 20px;\r\n");
      out.write("	border-radius: 5px;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	transition: background-color 0.3s;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-label:hover {\r\n");
      out.write("	background-color: #2980b9;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".icon.solid.fa-cog:hover {\r\n");
      out.write("	transform: rotate(45deg);\r\n");
      out.write("	transition: transform 0.3s ease;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-icon {\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".file-input {\r\n");
      out.write("	display: none;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body class=\"is-preload\">\r\n");
      out.write("	<!-- 회원탈퇴 모달 -->\r\n");
      out.write("	<div id=\"deleteMemberModal\" class=\"modal\">\r\n");
      out.write("		<div class=\"modal-content\">\r\n");
      out.write("			<span class=\"close\">&times;</span> <label style=\"font-size: 25px;\" for=\"password\">비밀번호 확인</label> <input type=\"password\" id=\"passwordMember\" placeholder=\"비밀번호를 입력하세요\">\r\n");
      out.write("			<button id=\"submitBtnMember\" onclick=\"clickbtn()\">확인</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- 회원탈퇴 최종확인 -->\r\n");
      out.write("	<div id=\"checkModal\" class=\"modal\">\r\n");
      out.write("		<div class=\"modal-content\">\r\n");
      out.write("			<label>정말로 탈퇴하시겠습니까?</label>\r\n");
      out.write("			<button id=\"checkBtn\">확인</button>\r\n");
      out.write("			<button id=\"cancleBtn\">취소</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<div id=\"page-wrapper\">\r\n");
      out.write("\r\n");
      out.write("		<!-- Header -->\r\n");
      out.write("		<header id=\"header\">\r\n");
      out.write("			<div class=\"logo container\">\r\n");
      out.write("				<div>\r\n");
      out.write("					<h1>\r\n");
      out.write("						<a href=\"main.do\" id=\"logo\">프로필 변경</a>\r\n");
      out.write("					</h1>\r\n");
      out.write("					<p></p>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("		</header>\r\n");
      out.write("\r\n");
      out.write("		<!-- Nav -->\r\n");
      out.write("		<nav id=\"nav\">\r\n");
      out.write("			<ul>\r\n");
      out.write("				<nav id=\"nav1\">\r\n");
      out.write("					<li class=\"current\"><a href=\"main.do\" class=\"icon solid fa-home\"> 메인</a></li>\r\n");
      out.write("					<li><a href=\"#\" class=\"icon solid fa-comment\"> 소식</a>\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"noticeListPage.do\">공지사항</a></li>\r\n");
      out.write("						</ul></li>\r\n");
      out.write("					<li><a href=\"#\" class=\"icon solid fa-comments\"> 커뮤니티</a>\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"boardListPage.do\">전체</a></li>\r\n");
      out.write("							<li><a href=\"infoListPage.do\">정보</a></li>\r\n");
      out.write("							<li><a href=\"chatListPage.do\">잡담</a></li>\r\n");
      out.write("						</ul></li>\r\n");
      out.write("					<li><a href=\"#\" class=\"icon solid fa-users\"> 매칭</a>\r\n");
      out.write("						<ul>\r\n");
      out.write("							<li><a href=\"memberList.do\">전체회원</a></li>\r\n");
      out.write("						</ul></li>\r\n");
      out.write("				</nav>\r\n");
      out.write("				");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("		</nav>\r\n");
      out.write("\r\n");
      out.write("		<!-- Main -->\r\n");
      out.write("		<section id=\"main\">\r\n");
      out.write("			<div class=\"container\">\r\n");
      out.write("				<div class=\"row\">\r\n");
      out.write("					<div class=\"col-3 col-12-medium\">\r\n");
      out.write("						<div class=\"sidebar\">\r\n");
      out.write("\r\n");
      out.write("							<!-- Sidebar -->\r\n");
      out.write("\r\n");
      out.write("							<!-- Recent Posts -->\r\n");
      out.write("							<section>\r\n");
      out.write("								<h2 class=\"major\">\r\n");
      out.write("									<span>사용 목록</span>\r\n");
      out.write("								</h2>\r\n");
      out.write("								<ul class=\"divided\">\r\n");
      out.write("									<li>\r\n");
      out.write("										<article class=\"box post-summary\">\r\n");
      out.write("											<h3>\r\n");
      out.write("												<a href=\"ownBoardListPage.do\">내가 작성한 글목록</a>\r\n");
      out.write("											</h3>\r\n");
      out.write("										</article>\r\n");
      out.write("									</li>\r\n");
      out.write("									<li>\r\n");
      out.write("										<article class=\"box post-summary\">\r\n");
      out.write("											<h3>\r\n");
      out.write("												<a href=\"updateProfilePage.do\">프로필 변경</a>\r\n");
      out.write("											</h3>\r\n");
      out.write("										</article>\r\n");
      out.write("									</li>\r\n");
      out.write("									<li>\r\n");
      out.write("										<article class=\"box post-summary\">\r\n");
      out.write("											<h3>\r\n");
      out.write("												<a href=\"updateInfoPage.do\">정보 변경</a>\r\n");
      out.write("											</h3>\r\n");
      out.write("										</article>\r\n");
      out.write("									</li>\r\n");
      out.write("									<li>\r\n");
      out.write("										<article class=\"box post-summary\">\r\n");
      out.write("											<h3>\r\n");
      out.write("												<a id=\"openModalBtnMember\">회원 탈퇴</a>\r\n");
      out.write("											</h3>\r\n");
      out.write("										</article>\r\n");
      out.write("									</li>\r\n");
      out.write("								</ul>\r\n");
      out.write("							</section>\r\n");
      out.write("\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"col-9 col-12-medium imp-medium\">\r\n");
      out.write("						<div class=\"content\">\r\n");
      out.write("\r\n");
      out.write("							<!-- Content -->\r\n");
      out.write("							<article class=\"box page-content\">\r\n");
      out.write("\r\n");
      out.write("								<section id=\"mypageprofile\">\r\n");
      out.write("									<h2 style=\"color: #bead7c;\">프로필</h2>\r\n");
      out.write("									<div class=\"imageContainer\">\r\n");
      out.write("										<img class=\"centered-image\" src=\"assets/css/images/log.png.jpg\" alt=\"\" /> <i style=\"font-size: 50px;\" id=\"iconModalBtn\" class=\"icon solid fa-cog\" onclick=\"\"></i>\r\n");
      out.write("									</div>\r\n");
      out.write("									<p class=\"useId\">준게이</p>\r\n");
      out.write("									<p class=\"useEmail\" style=\"margin-bottom: 50px;\">jungay@gaygay.gay</p>\r\n");
      out.write("\r\n");
      out.write("									<div id=\"updateProfileModal\" class=\"modal\">\r\n");
      out.write("										<div class=\"update-profile-content\">\r\n");
      out.write("											<span class=\"close\">&times;</span> <label style=\"font-size: 25px;\"> 프로필 변경</label>\r\n");
      out.write("											<form action=\".do\" method=\"post\" enctype=\"multipart/form-data\">\r\n");
      out.write("												<div id=\"selectedImageContainer\">\r\n");
      out.write("													<img id=\"selectedImage\" src=\"images/default.png\" alt=\"프로필이미지\">\r\n");
      out.write("												</div>\r\n");
      out.write("												<label for=\"profileUpdate\" class=\"file-label\"> <span class=\"file-icon\">📁</span> 파일 선택 <input name=\"file\" id=\"profileUpdate\" type=\"file\" class=\"file-input\">\r\n");
      out.write("												</label>\r\n");
      out.write("												<button type=\"submit\">수정</button>\r\n");
      out.write("											</form>\r\n");
      out.write("										</div>\r\n");
      out.write("									</div>\r\n");
      out.write("\r\n");
      out.write("								</section>\r\n");
      out.write("		</section>\r\n");
      out.write("		</article>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	</div>\r\n");
      out.write("	</section>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- Footer -->\r\n");
      out.write("	<footer id=\"footer\">\r\n");
      out.write("		<div class=\"container\">\r\n");
      out.write("			<div class=\"row gtr-200\">\r\n");
      out.write("				<div class=\"col-12\">\r\n");
      out.write("\r\n");
      out.write("					<!-- About -->\r\n");
      out.write("					<section>\r\n");
      out.write("						<h2 class=\"major\">\r\n");
      out.write("							<span>What's this about?</span>\r\n");
      out.write("						</h2>\r\n");
      out.write("						<p>\r\n");
      out.write("							This is <strong>TXT</strong>, yet another free responsive site template designed by <a href=\"http://twitter.com/ajlkn\">AJ</a> for <a href=\"http://html5up.net\">HTML5 UP</a>. It's released under the <a href=\"http://html5up.net/license/\">Creative Commons Attribution</a> license so feel free to use it for whatever you're working on (personal or commercial), just be sure to give us credit for the design. That's basically it :)\r\n");
      out.write("						</p>\r\n");
      out.write("					</section>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"col-12\">\r\n");
      out.write("\r\n");
      out.write("					<!-- Contact -->\r\n");
      out.write("					<section>\r\n");
      out.write("						<h2 class=\"major\">\r\n");
      out.write("							<span>Get in touch</span>\r\n");
      out.write("						</h2>\r\n");
      out.write("						<ul class=\"contact\">\r\n");
      out.write("							<li><a class=\"icon brands fa-facebook-f\" href=\"#\"><span class=\"label\">Facebook</span></a></li>\r\n");
      out.write("							<li><a class=\"icon brands fa-twitter\" href=\"#\"><span class=\"label\">Twitter</span></a></li>\r\n");
      out.write("							<li><a class=\"icon brands fa-instagram\" href=\"#\"><span class=\"label\">Instagram</span></a></li>\r\n");
      out.write("							<li><a class=\"icon brands fa-dribbble\" href=\"#\"><span class=\"label\">Dribbble</span></a></li>\r\n");
      out.write("							<li><a class=\"icon brands fa-linkedin-in\" href=\"#\"><span class=\"label\">LinkedIn</span></a></li>\r\n");
      out.write("						</ul>\r\n");
      out.write("					</section>\r\n");
      out.write("\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			<!-- Copyright -->\r\n");
      out.write("			<div id=\"copyright\">\r\n");
      out.write("				<ul class=\"menu\">\r\n");
      out.write("					<li>&copy; Untitled. All rights reserved</li>\r\n");
      out.write("					<li>Design: <a href=\"http://html5up.net\">HTML5 UP</a></li>\r\n");
      out.write("				</ul>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("	</footer>\r\n");
      out.write("\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("	<!-- Scripts -->\r\n");
      out.write("\r\n");
      out.write("	<script>\r\n");
      out.write("	const openModalBtnMember = document.getElementById(\"openModalBtnMember\");\r\n");
      out.write("	const iconModalBtn	= document.getElementById(\"iconModalBtn\");\r\n");
      out.write("	const updateProfileModal = document.getElementById(\"updateProfileModal\");\r\n");
      out.write("	\r\n");
      out.write("    const passwordModalMember = document.getElementById(\"deleteMemberModal\");\r\n");
      out.write("    const checkModal = document.getElementById(\"checkModal\");\r\n");
      out.write("    \r\n");
      out.write("    const closeBtnMember = passwordModalMember.querySelector(\".close\");\r\n");
      out.write("    const closeBtnIcon = updateProfileModal.querySelector(\".close\");\r\n");
      out.write("    \r\n");
      out.write("    const submitBtnMember = document.getElementById(\"submitBtnMember\");\r\n");
      out.write("    const checkBtn = document.getElementById(\"checkBtn\");\r\n");
      out.write("    const cancleBtn = document.getElementById(\"cancleBtn\");\r\n");
      out.write("    \r\n");
      out.write("    const passwordInputMember = document.getElementById(\"passwordMember\");\r\n");
      out.write("\r\n");
      out.write("    // icon 클릭시 모달창 생성\r\n");
      out.write("    iconModalBtn.addEventListener(\"click\", () => {\r\n");
      out.write("    	updateProfileModal.style.display = \"block\";\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    closeBtnIcon.addEventListener(\"click\", () => {\r\n");
      out.write("    	updateProfileModal.style.display = \"none\";\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("    // 회원탈퇴 버튼을 눌렀다면 모달창 생성\r\n");
      out.write("    openModalBtnMember.addEventListener(\"click\", () => {\r\n");
      out.write("    	passwordModalMember.style.display = \"block\";\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 모달창의 x버튼을 눌렀다면 모달창 끄기\r\n");
      out.write("    closeBtnMember.addEventListener(\"click\", () => {\r\n");
      out.write("   		passwordModalMember.style.display = \"none\";\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 최종 확인에서 탈퇴를 선택했다면\r\n");
      out.write("    checkBtn.addEventListener(\"click\", () => {\r\n");
      out.write("    	checkModal.style.display = \"none\";\r\n");
      out.write("    	location.href = \"deleteMember.do\";\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    // 최종 확인에서 취소를 했다면\r\n");
      out.write("    cancleBtn.addEventListener(\"click\", () => {\r\n");
      out.write("    	checkModal.style.display = \"none\";\r\n");
      out.write("    });\r\n");
      out.write("\r\n");
      out.write("    //\r\n");
      out.write("   /* submitBtnMember.click(function(){\r\n");
      out.write("    	const enteredPassword = passwordInputMember.value;\r\n");
      out.write("    	if (enteredPassword === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mdata.mpw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') { // ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mdata.mpw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("			// 비밀번호가 일치하면 최종확인\r\n");
      out.write("			passwordModalMember.style.display = \"none\";\r\n");
      out.write("			checkModal.style.display = \"block\";\r\n");
      out.write("		} else {\r\n");
      out.write("			alert(\"비밀번호가 일치하지 않습니다\");\r\n");
      out.write("			passwordModalMember.style.display = \"none\";\r\n");
      out.write("		}\r\n");
      out.write("    	\r\n");
      out.write("    }); */\r\n");
      out.write("    \r\n");
      out.write("    function clickbtn(){\r\n");
      out.write("    	const enteredPassword = passwordInputMember.value;\r\n");
      out.write("        \r\n");
      out.write("        if (enteredPassword === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mdata.mpw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') { // ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mdata.mpw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("  			// 비밀번호가 일치하면 최종확인\r\n");
      out.write("  			passwordModalMember.style.display = \"none\";\r\n");
      out.write("  			checkModal.style.display = \"block\";\r\n");
      out.write("  		} else {\r\n");
      out.write("  			alert(\"비밀번호가 일치하지 않습니다\");\r\n");
      out.write("  			passwordModalMember.style.display = \"none\";\r\n");
      out.write("  		}\r\n");
      out.write("    };\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("	/* 첨부된 사진 예시로 볼수있는 코드 */    \r\n");
      out.write("    const profileUpdateInput = document.getElementById(\"profileUpdate\");\r\n");
      out.write("    const selectedImage = document.getElementById(\"selectedImage\");\r\n");
      out.write("\r\n");
      out.write("    profileUpdateInput.addEventListener(\"change\", function() {\r\n");
      out.write("        const file = this.files[0];\r\n");
      out.write("        if (file) {\r\n");
      out.write("            const reader = new FileReader();\r\n");
      out.write("            reader.onload = function(event) {\r\n");
      out.write("                selectedImage.src = event.target.result;\r\n");
      out.write("            };\r\n");
      out.write("            reader.readAsDataURL(file);\r\n");
      out.write("        } else {\r\n");
      out.write("            selectedImage.src = \"images/default.png\";\r\n");
      out.write("        }\r\n");
      out.write("    });\r\n");
      out.write("    \r\n");
      out.write("     /* submitBtnMember.addEventListener(\"click\", () => {\r\n");
      out.write("      const enteredPassword = passwordInputMember.value;\r\n");
      out.write("      \r\n");
      out.write("      if (enteredPassword === '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mdata.mpw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("') { // ");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mdata.mpw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("			// 비밀번호가 일치하면 최종확인\r\n");
      out.write("			passwordModalMember.style.display = \"none\";\r\n");
      out.write("			checkModal.style.display = \"block\";\r\n");
      out.write("		} else {\r\n");
      out.write("			alert(\"비밀번호가 일치하지 않습니다\");\r\n");
      out.write("			passwordModalMember.style.display = \"none\";\r\n");
      out.write("		}\r\n");
      out.write("      \r\n");
      out.write("    }); */\r\n");
      out.write("    \r\n");
      out.write("	</script>\r\n");
      out.write("	<script src=\"assets/js/jquery.min.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/jquery.dropotron.min.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/jquery.scrolly.min.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/browser.min.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/breakpoints.min.js\"></script>\r\n");
      out.write("	<script src=\"assets/js/util.js\"></script>\r\n");
      out.write("	");
      if (_jspx_meth_c_005fchoose_005f1(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("					");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("				");
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /updateProfilePage.jsp(356,5) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty mid}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<a href=\"loginPage.do\" class=\"icon solid fa-lock login\" value=\"로그인\" title=\"로그인\"> 로그인</a>\r\n");
          out.write("						<a href=\"signupPage.do\" class=\"icon solid fa-user-plus signup\" value=\"회원가입\" title=\"회원가입\"> 회원가입</a>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("						<a href=\"logout.do\" class=\"icon solid fa-lock-open logout\" value=\"로그아웃\" title=\"로그아웃\"> 로그아웃</a>\r\n");
          out.write("						<a href=\"mypage.do\" class=\"icon solid fa-user mypage\" value=\"마이페이지\" title=\"마이페이지\"> 마이페이지</a>\r\n");
          out.write("					");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fchoose_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f1 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f1_reused = false;
    try {
      _jspx_th_c_005fchoose_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f1.setParent(null);
      int _jspx_eval_c_005fchoose_005f1 = _jspx_th_c_005fchoose_005f1.doStartTag();
      if (_jspx_eval_c_005fchoose_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("		");
          if (_jspx_meth_c_005fwhen_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("		");
          if (_jspx_meth_c_005fotherwise_005f1(_jspx_th_c_005fchoose_005f1, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f1);
      _jspx_th_c_005fchoose_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f1 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f1_reused = false;
    try {
      _jspx_th_c_005fwhen_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      // /updateProfilePage.jsp(620,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${empty mid}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f1 = _jspx_th_c_005fwhen_005f1.doStartTag();
      if (_jspx_eval_c_005fwhen_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<script src=\"assets/js/main.js\"></script>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f1);
      _jspx_th_c_005fwhen_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f1, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f1 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f1_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f1);
      int _jspx_eval_c_005fotherwise_005f1 = _jspx_th_c_005fotherwise_005f1.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("			<script src=\"assets/js/main2.js\"></script>\r\n");
          out.write("		");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f1);
      _jspx_th_c_005fotherwise_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f1_reused);
    }
    return false;
  }
}
